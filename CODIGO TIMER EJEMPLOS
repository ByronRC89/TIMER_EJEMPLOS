#include <stdint.h>
#include "stm32l053xx.h"

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif


void timer2();
void timer6();
void timer21();
int main(void){


	//ENABLE HSI 16MHZ
		//HSI ON
	RCC->CR |=(1<<0);
		//HSI16 AS SYSCLK
	RCC->CFGR |=(1<<0);

	//ENABLE GPIOA CLK
	RCC->IOPENR |=(1<<0);
	//ENABLE GPIOB CLK
	RCC->IOPENR |=(1<<1);
	//ENABLE GPIOC CLK
	RCC->IOPENR |=(1<<2);

	//ENABLE SYSCFG CLK
	RCC->APB2ENR |=(1<<0);

	//GPIO CONFIG
		//PC8 AS OUTPUT
	GPIOC->MODER &=~(1<<17);
	GPIOC->ODR |=(1<<8);
	GPIOC->ODR &=~(1<<8);
		//PC6 AS OUTPUT
	GPIOC->MODER &=~(1<<13);
		//PC5 AS OUTPUT
	GPIOC->MODER &=~(1<<11);
		//PC13 AS INPUT
	GPIOC->MODER &=~(1<<26);
	GPIOC->MODER &=~(1<<27);



	timer2();
	timer6();
	timer21();

	while(1){

        // 1s
		if((TIM2->SR & 0x00000001)){ //CHECK UIF == 1
								TIM2->SR &=~1;			//CLEAR UIF SI NO LA LIMPIO NUNCA SE VA A LIMPIAR
								GPIOC->ODR ^=(1<<8);	//TOGGLE CAMBIA EL VALOR O SEA SERA PULSANTE
								GPIOC->BRR  |= 0x01<<0X0FF;
					}
		// 500ms
		if((TIM6->SR & 0x00000001)){
								TIM6->SR &=~1;
								GPIOC->ODR ^=(1<<6);
								GPIOC->BRR  |= 0x01<<0X0FF;
					}
     //250ms
		if((TIM21->SR & 0x00000001)){
						TIM21->SR &=~1;
						GPIOC->ODR ^=(1<<5);
						GPIOC->BRR  |= 0x01<<0X0FF;
					}

			}
	}


void timer2(){

	//TIMER 2 CONFIG 1s
		//ENABLE TIMER2
	RCC->APB1ENR |=(1<<0);	//AQUI ES DONDE VIVE EL TIMER2

		//LOAD PRESCALER
   // TIM2->PSC = 5000-1;	
  TIM2->PSC = 1600-1; //ESTE VALOR ES DEL EJEMPLO VISTO EN CLASE PARA UP COUNTER, EL -1 SIRVE PARA PASAR DE CICLOS
		//LOAD ARR
	//TIM2->ARR = 2000-1;	
  TIM2->ARR = 10000-1;   //SE RESTA UNO PARA QUE AVANCE LOS CICLOS

		//DIRECTION [0: (DEFAULT) UP COUNTER, 1: DOWN COUNTER]
	//TIM2->CR1 |=(1<<0);
		//COUNT TO 0
	TIM2->CNT = 0;
		//COUNTER ENABLE
	TIM2->CR1 |=(1<<0);

}

void timer6(){

	//TIMER 6 CONFIG 500ms
		//ENABLE TIMER2
	RCC->APB1ENR |=(1<<4);	//AQUI ES DONDE VIVE EL TIMER2

		//LOAD PRESCALER
//TIM6->PSC = 5000-1;	
TIM6->PSC = 1600-1;   //ESTE VALOR ES DEL EJEMPLO VISTO EN CLASE PARA UP COUNTER, EL -1 SIRVE PARA PASAR DE CICLOS
		//LOAD ARR
	//TIM6->ARR = 1000-1;	
    TIM6->ARR = 5000-1;   //SE RESTA UNO PARA QUE AVANCE LOS CICLOS

		//DIRECTION [0: (DEFAULT) UP COUNTER, 1: DOWN COUNTER]
	//TIM2->CR1 |=(1<<0);
		//COUNT TO 0
	TIM6->CNT = 0;
		//COUNTER ENABLE
	TIM6->CR1 |=(1<<0);
}

void timer21(){

	//TIMER 21 CONFIG 250ms
		//ENABLE TIMER21
	RCC->APB2ENR |=(1<<2);	//AQUI ES DONDE VIVE EL TIMER 21

		//LOAD PRESCALER
	//TIM21->PSC = 5000-1;
    TIM21->PSC = 1600-1; //ESTE VALOR ES DEL EJEMPLO VISTO EN CLASE PARA UP COUNTER, EL -1 SIRVE PARA PASAR DE CICLOS


		//LOAD ARR
    // TIM21->ARR = 140-1;
     TIM21->ARR = 2500-1; //SE RESTA UNO PARA QUE AVANCE LOS CICLOS
		//COUNT TO 0
	TIM21->CNT = 0;
		//COUNTER ENABLE
	TIM21->CR1 |=(1<<0);

}

